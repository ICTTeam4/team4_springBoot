<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- namespace는 반드시 mapper 위치로 설정해야 된다. -->
<mapper namespace="com.saintkream.server.domain.members.mapper.MembersMapper">
<!-- 닉네임 중복확인 yb-->
	<select id="checkNickname" parameterType="String" resultType="int"> 
	SELECT COUNT(*) FROM members WHERE nickname = #{nickname} 
	</select>
<!--  이메일 중복 확인 yb -->
<select id="checkEmail" parameterType="String" resultType="int">
 SELECT IFNULL(COUNT(*), 0) FROM members WHERE email = #{email} 
 </select>
<!-- 로그인시 아이디확인 -->
 <select id="getMembersByIdEmail" parameterType="String" resultType="MembersVO">
 SELECT * FROM members WHERE email = #{email} 
 </select>

<!--  회원가입  yb-->
<insert id="insertMember" parameterType="MembersVO"> 
INSERT INTO members 
(name, email, tel_no, password, adv_agree, personal_agree, reg_date, status, nickname) 
VALUES (#{name}, #{email}, #{tel_no}, #{password}, #{adv_agree}, #{personal_agree}, NOW(), #{status}, #{nickname}) 
</insert>

<!-- 마이페이지 닉네임 변경경 -->
<update id="updateNickname" parameterType="MembersVO">
    UPDATE members
    SET nickname = #{newNickname}
    WHERE email = #{email}
</update>

<!-- 패스워드업데이트 - 마이페이지  -->
<update id="updatePassword" parameterType="MembersVO">
    UPDATE members
    SET password = #{password}
    WHERE member_id = #{member_id}
</update>
<!-- 폰번호 업데이트 - 마이페이지  -->
<update id="updatePhone" parameterType="MembersVO">
    UPDATE members
    SET tel_no = #{tel_no}
    WHERE member_id = #{member_id}
</update>
<!-- 광고성업데이트  -->
<update id="updateAdvAgree" parameterType="MembersVO">
    UPDATE members
    SET adv_agree = #{adv_agree}
    WHERE member_id = #{member_id}
</update>
<!-- 삭제 -->
<update id="withdrawMember" parameterType="MembersVO">
    UPDATE members
    SET status = 'INACTIVE'
    WHERE member_id = #{member_id}
</update>

 <update id="updateProfileImage">
        UPDATE members
        SET profile_image = #{imageUrl}
        WHERE email = #{email}
</update>



	<select id="findUserByProvider" parameterType="MembersVO" resultType="MembersVO">
		select * from members  
		where  
		(
          (sns_provider = 'kakao' and sns_email_kakao = #{sns_email_kakao})
		OR
		  (sns_provider = 'naver' and sns_email_naver = #{sns_email_naver})
			OR
		  (sns_provider = 'google' and sns_email_google = #{sns_email_google})
		)
	</select>

	<insert id="insertSNSMember" parameterType="MembersVO">
		insert into members(	
			nickname,
			email, 
			<if test="password != null">
			password, 
			</if>
			name, 
			<if test="sns_email_kakao != null">
			sns_email_kakao, 
			</if>
			<if test="sns_email_naver != null">
			sns_email_naver, 
			</if>
			<if test="sns_email_google != null">
			sns_email_google, 
			</if>
			sns_provider,
			reg_date
		)
		values(
			#{name},
			#{email},
			<if test="password != null">
			#{password},
			</if>
			#{name},
			<if test="sns_email_kakao != null">
			#{sns_email_kakao}, 
			</if>
			<if test="sns_email_naver != null">
			#{sns_email_naver}, 
			</if>
			<if test="sns_email_google != null">
			#{sns_email_google}, 
			</if>
			#{sns_provider},
			now())
	</insert>
</mapper>